{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SMR\\\\Desktop\\\\React-Mern-Stack-Crud-master\\\\crudoperations\\\\src\\\\Components\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { Table, Thead, Tbody, Tr, Td, Th, TableContainer, Flex, Spinner, Heading } from \"@chakra-ui/react\";\nimport axios from \"axios\";\nimport AddUser from \"./AddUser\";\nimport DeleteUser from \"./DeleteUser\";\nimport EditUpdateUser from \"./EditUpdateUser\";\nimport Pagination from \"./Common/Pagination\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [employeeData, setEmployeeData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [currentPage, setcurrentPage] = useState(1);\n  const postPerPage = 5;\n\n  //get users Data\n  /*   const getUsersData = () => {\n      axios\n        .get(\"http://localhost:5000/users\")\n        .then((res) => {\n          setEmployeeData(res.data.data);\n          setLoading(false);\n        })\n        .catch((error) => console.error(error));\n    }; */\n  //get users Data\n  const getprod = () => {\n    axios.get(\"http://localhost:5000/products\").then(res => {\n      console.log(res.data.data);\n      setLoading(false);\n    }).catch(error => console.error(error));\n  };\n  useEffect(() => {\n    /*   getUsersData(); */\n    getprod();\n  }, []);\n\n  // / Get current posts\n  const indexOfLastPost = currentPage * postPerPage;\n  const indexOfFirstPost = indexOfLastPost - postPerPage;\n  const currentPosts = employeeData.slice(indexOfFirstPost, indexOfLastPost);\n\n  // Change page\n  const paginate = pageNumber => setcurrentPage(pageNumber);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: loading ? /*#__PURE__*/_jsxDEV(Spinner, {\n      thickness: \"4px\",\n      speed: \"0.8s\",\n      emptyColor: \"grey\",\n      color: \"blue\",\n      size: \"lg\",\n      mt: \"20\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this) : employeeData.length > 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(TableContainer, {\n        mb: 5,\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          variant: \"striped\",\n          children: [/*#__PURE__*/_jsxDEV(Thead, {\n            children: /*#__PURE__*/_jsxDEV(Tr, {\n              children: [/*#__PURE__*/_jsxDEV(Th, {\n                children: \"ID\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Th, {\n                children: \"Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Th, {\n                children: \"Email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Th, {\n                children: \"Designation\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Th, {\n                children: \"Action\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Tbody, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this)\n    }, void 0, false) : /*#__PURE__*/_jsxDEV(Heading, {\n      as: \"h3\",\n      size: \"lg\",\n      my: \"10\",\n      children: \"No users found!!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"hiAgIrIWy6zKNBOC4lP4GPx4iMk=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","Table","Thead","Tbody","Tr","Td","Th","TableContainer","Flex","Spinner","Heading","axios","AddUser","DeleteUser","EditUpdateUser","Pagination","jsxDEV","_jsxDEV","Fragment","_Fragment","Dashboard","_s","employeeData","setEmployeeData","loading","setLoading","currentPage","setcurrentPage","postPerPage","getprod","get","then","res","console","log","data","catch","error","indexOfLastPost","indexOfFirstPost","currentPosts","slice","paginate","pageNumber","children","thickness","speed","emptyColor","color","size","mt","fileName","_jsxFileName","lineNumber","columnNumber","length","mb","variant","as","my","_c","$RefreshReg$"],"sources":["C:/Users/SMR/Desktop/React-Mern-Stack-Crud-master/crudoperations/src/Components/Dashboard.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport {\n  Table,\n  Thead,\n  Tbody,\n  Tr,\n  Td,\n  Th,\n  TableContainer,\n  Flex,\n  Spinner,\n  Heading,\n} from \"@chakra-ui/react\";\nimport axios from \"axios\";\nimport AddUser from \"./AddUser\";\nimport DeleteUser from \"./DeleteUser\";\nimport EditUpdateUser from \"./EditUpdateUser\";\nimport Pagination from \"./Common/Pagination\";\n\nconst Dashboard = () => {\n  const [employeeData, setEmployeeData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [currentPage, setcurrentPage] = useState(1);\n  const postPerPage = 5;\n\n  //get users Data\n/*   const getUsersData = () => {\n    axios\n      .get(\"http://localhost:5000/users\")\n      .then((res) => {\n        setEmployeeData(res.data.data);\n        setLoading(false);\n      })\n      .catch((error) => console.error(error));\n  }; */\n  //get users Data\n  const getprod = () => {\n    axios\n      .get(\"http://localhost:5000/products\")\n      .then((res) => {\n        console.log(res.data.data);\n        setLoading(false);\n      })\n      .catch((error) => console.error(error));\n  };\n  useEffect(() => {\n  /*   getUsersData(); */\n    getprod();\n\n  }, []);\n\n  // / Get current posts\n  const indexOfLastPost = currentPage * postPerPage;\n  const indexOfFirstPost = indexOfLastPost - postPerPage;\n  const currentPosts = employeeData.slice(indexOfFirstPost, indexOfLastPost);\n\n  // Change page\n  const paginate = (pageNumber) => setcurrentPage(pageNumber);\n  return (\n    <div>\n      {loading ? (\n        <Spinner\n          thickness=\"4px\"\n          speed=\"0.8s\"\n          emptyColor=\"grey\"\n          color=\"blue\"\n          size=\"lg\"\n          mt=\"20\"\n        />\n      ) : employeeData.length > 0 ? (\n        <>\n          <TableContainer mb={5}>\n            <Table variant=\"striped\">\n              <Thead>\n                <Tr>\n                  <Th>ID</Th>\n                  <Th>Name</Th>\n                  <Th>Email</Th>\n                  <Th>Designation</Th>\n                  <Th>Action</Th>\n                </Tr>\n              </Thead>\n              <Tbody>\n                {/* currentPosts.map((ele) => (\n                  <Tr key={ele._id}>\n                    <Td>{ele._id}</Td>\n                    <Td>{ele.name}</Td>\n                    <Td>{ele.email}</Td>\n                    <Td>{ele.designation}</Td>\n                    <Td>\n                      <Flex gap=\"2\">\n                        <DeleteUser\n                          userId={ele._id}\n                          getUsersData={getUsersData}\n                        />\n                        <EditUpdateUser\n                          userData={ele}\n                          getUsersData={getUsersData}\n                        />\n                      </Flex>\n                    </Td>\n                  </Tr>\n                )) */}\n              </Tbody>\n            </Table>\n          </TableContainer>\n          {/* employeeData.length > 5 && (\n            <Pagination\n              currentPage={currentPage}\n              postPerPage={postPerPage}\n              totalPosts={employeeData.length}\n              paginate={paginate}\n              setcurrentPage={setcurrentPage}\n            />\n          ) */}\n        </>\n      ) : (\n        <Heading as=\"h3\" size=\"lg\" my=\"10\">\n          No users found!!\n        </Heading>\n      )}\n    {/*   <AddUser getUsersData={getUsersData} /> */}\n    </div>\n  );\n};\n\nexport default Dashboard;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}